-- SEGUROS

CREATE TABLE CLIENTE(
  ID_CLIENTE NUMBER(5) CONSTRAINT CLIENTE_PK PRIMARY KEY,
  APATERNO VARCHAR2(35) CONSTRAINT CLI_AP_NN NOT NULL,
  AMATERNO VARCHAR2(35),
  NOMBRE VARCHAR2(50) CONSTRAINT CLI_NOM_NN NOT NULL,
  EMAIL VARCHAR2(50),
  MUNICIPIO VARCHAR2(50) DEFAULT 'ZACATECAS'
);

SELECT * FROM CLIENTE;

INSERT INTO CLIENTE VALUES(1,'FLORES','FELIX','JUAN','JUAN@GMAIL.COM','VALPARAISO');
INSERT INTO CLIENTE VALUES(2,'MARTINEZ','TELLEZ','PEDRO','PEDRO@GMAIL.COM','ZACATECAS');
INSERT INTO CLIENTE VALUES(3,'HERNANDEZ','JARA','MARIA','MARIA@GMAIL.COM','JEREZ');
INSERT INTO CLIENTE VALUES(4,'MONTELLANO','PEREZ','JOEL','JOEL@GMAIL.COM','VALPARAISO');

COMMIT;


CREATE TABLE AUTOMOVIL(
  MATRICULA CHAR(8) CONSTRAINT AUTOMOVIL_PK PRIMARY KEY,
  MARCA VARCHAR2(50) CONSTRAINT AUT_MAR_NN NOT NULL,
  MODELO VARCHAR2(50) CONSTRAINT AUT_MOD_NN NOT NULL,
  COLOR VARCHAR2(30)
);

SELECT * FROM AUTOMOVIL;

INSERT INTO AUTOMOVIL VALUES('63SDF352','HONDA','CIVIC','NEGRO');
INSERT INTO AUTOMOVIL VALUES('82JHD832','NISSAN','CENTRA','BLANCO');
INSERT INTO AUTOMOVIL VALUES('64KSS837','HONDA','ACCORD','ROJO');
INSERT INTO AUTOMOVIL VALUES('64UDS932','NISSAN','STURU','NEGRO');

ALTER TABLE AUTOMOVIL ADD COSTO NUMBER(8,2);
UPDATE AUTOMOVIL SET COSTO = 150000 WHERE MATRICULA = '63SDF352';
UPDATE AUTOMOVIL SET COSTO = 250000 WHERE MATRICULA = '82JHD832';
UPDATE AUTOMOVIL SET COSTO = 200000 WHERE MATRICULA = '64KSS837';
UPDATE AUTOMOVIL SET COSTO = 180000 WHERE MATRICULA = '64UDS932';

CREATE TABLE AGENTE_VENTAS(
  ID_VENDEDOR NUMBER(5) CONSTRAINT AGENTE_VENTAS_PK PRIMARY KEY,
  APATERNO VARCHAR2(35) CONSTRAINT AG_VEN_AP_NN NOT NULL,
  AMATERNO VARCHAR2(35),
  NOMBRE VARCHAR2(50) CONSTRAINT AG_VEN_NOM_NN NOT NULL,
  TELEFONO CHAR(10) CONSTRAINT AG_VEN_TEL_NN NOT NULL,
  DIRECCION VARCHAR2(100) DEFAULT 'ZACATECAS'
);

INSERT INTO AGENTE_VENTAS VALUES(1,'OLIVEROS','MARTINEZ','JUAN','2839287364','VALPARAISO');
INSERT INTO AGENTE_VENTAS VALUES(2,'FLORES','BARRIOS','GUADALUPE','8394876254','JEREZ');
INSERT INTO AGENTE_VENTAS VALUES(3,'JARA','QUINTANILLA','MAURICIO','7364528394','ZACATECAS');
INSERT INTO AGENTE_VENTAS VALUES(4,'BELTRAN','FERNANDEZ','JOEL','2647392048','FRESNILLO');

SELECT * FROM AGENTE_VENTAS;


CREATE TABLE TIPO_SEGURO(
  ID_SEGURO NUMBER(5) CONSTRAINT TIPO_SEGURO_PK PRIMARY KEY,
  NOMBRE VARCHAR2(50) CONSTRAINT NOM_TIP_SEG_NN NOT NULL,
  DESCRIPCION VARCHAR2(150)
);

INSERT INTO TIPO_SEGURO VALUES(1,'COMPLETO','SEGURO COMPLETO');
INSERT INTO TIPO_SEGURO VALUES(2,'CHOQUES LEVES','SEGURO CONTRA CHOQUES LEVES');
INSERT INTO TIPO_SEGURO VALUES(3,'RAYADURAS','SEGURO CONTRA RAYADURAS');
INSERT INTO TIPO_SEGURO VALUES(4,'CHOCQUES GENERALES','SEGURO CONTRA CHOQUES GENERALES');

SELECT * FROM TIPO_SEGURO;


--CLIENTE_AUTOMOVIL
CREATE TABLE CLIENTE_AUTOMOVIL(
  ID_CLIENTE NUMBER(5),
  MATRICULA CHAR(8),
  FECHA DATE,
  CONSTRAINT CLIENTE_AUTOMOVIL_PK PRIMARY KEY(ID_CLIENTE,MATRICULA,FECHA),
  CONSTRAINT CLI_CLIAUT_FK FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE),
  CONSTRAINT AUT_CLIAUT_FK FOREIGN KEY (MATRICULA) REFERENCES AUTOMOVIL(MATRICULA)
);

INSERT INTO CLIENTE_AUTOMOVIL VALUES(1,'63SDF352','15/05/2020');
INSERT INTO CLIENTE_AUTOMOVIL VALUES(2,'82JHD832','15/05/2020');
INSERT INTO CLIENTE_AUTOMOVIL VALUES(3,'64KSS837','15/05/2020');
INSERT INTO CLIENTE_AUTOMOVIL VALUES(4,'64UDS932','15/05/2020');

SELECT SYSDATE FROM DUAL;

SELECT * FROM CLIENTE_AUTOMOVIL;

--ACTUALIZAR UN CAMPO DE UN REGISTRO
--UPDATE "NOM_TABLA" SET "CAMPO" = "NUEVO_VALOR" WHERE "LLAVE_PRIMARYA DEL REGISTRO"

--RELACION ENTRE RELACIONES

CREATE TABLE POLIZA(
  ID_VENDEDOR NUMBER(5),
  ID_SEGURO NUMBER(5),
  ID_CLIENTE NUMBER(5),
  MATRICULA CHAR(8),
  FECHA DATE,
  FOLIO CHAR(8),
  FECHA_E DATE CONSTRAINT POL_FE_NN NOT NULL,
  FECHA_I DATE CONSTRAINT POL_FI_NN NOT NULL,
  FECHA_F DATE CONSTRAINT POL_FF_NN NOT NULL,
  COSTO NUMBER(7,2)CONSTRAINT POL_COS_NN NOT NULL,
  CONSTRAINT POLIZA_PK PRIMARY KEY (ID_VENDEDOR,ID_SEGURO,ID_CLIENTE,MATRICULA,FECHA,FOLIO),
  CONSTRAINT AGENTE_POL_FK FOREIGN KEY (ID_VENDEDOR) REFERENCES AGENTE_VENTAS(ID_VENDEDOR),
  CONSTRAINT TIPO_SEGURO_POL_FK FOREIGN KEY (ID_SEGURO) REFERENCES TIPO_SEGURO(ID_SEGURO),
  CONSTRAINT CLIENTE_AUTOMOVIL_POL_FK FOREIGN KEY (ID_CLIENTE,MATRICULA,FECHA) REFERENCES CLIENTE_AUTOMOVIL(ID_CLIENTE,MATRICULA,FECHA)
);

INSERT INTO POLIZA VALUES(1,1,1,'63SDF352','15/05/2020','00000001','27/04/21','28/04/21','28/04/2022',5000);
INSERT INTO POLIZA VALUES(2,2,2,'82JHD832','15/05/2020','00000002','28/04/21','29/04/21','29/04/2022',5000);
INSERT INTO POLIZA VALUES(3,3,3,'64KSS837','15/05/2020','00000003','29/04/21','30/04/21','30/04/2022',5000);

SELECT * FROM POLIZA;

CREATE TABLE PAGO_POLIZA(
  ID_VENDEDOR NUMBER(5),
  ID_SEGURO NUMBER(5),
  ID_CLIENTE NUMBER(5),
  MATRICULA CHAR(8),
  FECHA DATE,
  FOLIO CHAR(8),
  ID_PAGO NUMBER(8),
  FECHA_PAGO DATE,
  PAGO NUMBER(7,2),
  CONSTRAINT PAGO_POLIZA_PK PRIMARY KEY (ID_VENDEDOR,ID_SEGURO,ID_CLIENTE,MATRICULA,FECHA,FOLIO,ID_PAGO),
  CONSTRAINT POLIZA_PAGO_POLIZA_FK FOREIGN KEY (ID_VENDEDOR,ID_SEGURO,ID_CLIENTE,MATRICULA,FECHA,FOLIO) REFERENCES POLIZA(ID_VENDEDOR,ID_SEGURO,ID_CLIENTE,MATRICULA,FECHA,FOLIO)
);

INSERT INTO PAGO_POLIZA VALUES(1,1,1,'63SDF352','15/05/2020','00000001',1,'15/11/20',1000);
INSERT INTO PAGO_POLIZA VALUES(2,2,2,'82JHD832','15/05/2020','00000002',2,'15/06/21',1000);
INSERT INTO PAGO_POLIZA VALUES(3,3,3,'64KSS837','15/05/2020','00000003',3,'15/06/21',1000);

SELECT * FROM PAGO_POLIZA;

CREATE TABLE AJUSTADOR(
  ID_AJUSTRADOR NUMBER(5) CONSTRAINT AJUSTADOR_PK PRIMARY KEY,
  NOMBRE VARCHAR(50) CONSTRAINT NOM_AJUS_NN NOT NULL,
  APATERNO VARCHAR(50) CONSTRAINT APA_AJUS_NN NOT NULL,
  AMATERNO VARCHAR(50),
  TELEFONO VARCHAR(20) CONSTRAINT TEL_AJUS_NN NOT NULL,
  DIRECCION VARCHAR(150) CONSTRAINT DIR_AJUS_NN NOT NULL,
  RFC CHAR(13) CONSTRAINT RFC_AJUS_NN NOT NULL,
  SALARIO NUMBER(7,2)
);
--ALTER TABLE AJUSTADOR ADD SALARIO NUMBER(7,2);

INSERT INTO AJUSTADOR VALUES(1,'JUAN','PEREZ',NULL,'4924747548','ALAMEDA 125','357289DJHYT36',5000);
INSERT INTO AJUSTADOR VALUES(2,'PEDRO','MARTINEZ',NULL,'2345747548','CENTRO 125','177689FJSYA86',6000);

CREATE TABLE TIPO_ACCIDENTE(
  ID_ACCIDENTE NUMBER(3) CONSTRAINT TIPO_ACCIDENTE_PK PRIMARY KEY,
  DESCRIPCION VARCHAR(150) CONSTRAINT DES_TI_ACC_NN NOT NULL,
  DANIOS VARCHAR(100)
);

CREATE TABLE ACCIDENTE(
  ID_VENDEDOR NUMBER(5),
  ID_SEGURO NUMBER(5),
  ID_CLIENTE NUMBER(5),
  MATRICULA CHAR(8),
  FECHA DATE,
  FOLIO CHAR(8),
  ID_AJUSTADOR NUMBER(5),
  ID_ACCIDENTE NUMBER(3),
  CONSTRAINT ACCIDENTE_PK PRIMARY KEY(ID_VENDEDOR,ID_SEGURO,ID_CLIENTE,MATRICULA,FECHA,FOLIO,ID_AJUSTADOR,ID_ACCIDENTE),
  CONSTRAINT POL_ACC_FK FOREIGN KEY (ID_VENDEDOR,ID_SEGURO,ID_CLIENTE,MATRICULA,FECHA,FOLIO) REFERENCES POLIZA(ID_VENDEDOR,ID_SEGURO,ID_CLIENTE,MATRICULA,FECHA,FOLIO),
  CONSTRAINT AJUS_ACC_FK FOREIGN KEY (ID_AJUSTADOR) REFERENCES AJUSTADOR(ID_AJUSTRADOR),
  CONSTRAINT TIP_ACC_ACC_FK FOREIGN KEY (ID_ACCIDENTE) REFERENCES TIPO_ACCIDENTE(ID_ACCIDENTE)
);

INSERT INTO ACCIDENTE ;




1. Consultar los datos generales de todos los clientes.
SELECT * FROM CLIENTE;

2. Consultar el nombre completo de los agentes de ventas en una sola columna.
SELECT * FROM AGENTE;

SELECT APATERNO,AMATERNO,NOMBRE FROM AGENTE;
SELECT APATERNO || AMATERNO || NOMBRE FROM AGENTE;
SELECT APATERNO ||' ' || AMATERNO || ' ' || NOMBRE FROM AGENTE;

SELECT APATERNO ||' ' || AMATERNO || ' ' || NOMBRE FROM AGENTE;

SELECT APATERNO ||' ' || AMATERNO || ' ' || NOMBRE AS AGENTE FROM AGENTE;
SELECT APATERNO ||' ' || AMATERNO || ' ' || NOMBRE AGENTE FROM AGENTE;
SELECT APATERNO ||' ' || AMATERNO || ' ' || NOMBRE "Agente" FROM AGENTE;
SELECT APATERNO ||' ' || AMATERNO || ' ' || NOMBRE "Agente de Ventas" FROM AGENTE;


3. Consultar el salario anual de los ajustadores.
SELECT * FROM AJUSTADOR;

SELECT ID_AJUSTADOR, APATERNO, AMATERNO, NOMBRE, 
      SALARIO AS SALARIO_MENSUAL, 
      SALARIO * 12 AS SALARIO_ANUAL
FROM AJUSTADOR;

4. Consultar los datos generales de todos los veh?culos de una determinada marca.
SELECT * FROM AUTOMOVIL;

SELECT * FROM AUTOMOVIL
WHERE MARCA = 'NISSAN';

5. Consultar los datos generales de los autom?viles cuyo costo est? entre 100000 y 250000.
SELECT * FROM AUTOMOVIL;

SELECT * FROM AUTOMOVIL
WHERE COSTO BETWEEN 100000 AND 250000; 

6. Consultar el total de pólizas generadas.
SELECT * FROM POLIZA;

SELECT COUNT(*) AS TOTAL_POLIZAS 
FROM POLIZA;

--FUNCIONES DE GRUPO   COUNT(*) |  COUNT(COLUMNA)  SUM(COLUMNA) MAX(COLUMNA)  MIN(COLUMNA  AVG(COLUMNA)
--NOTA_ LAS FUNCIONES DE GRUPO IGNORAN LOS VALORES NULL
SELECT * FROM AJUSTADOR;
SELECT SUM(SALARIO) AS NOMINA FROM AJUSTADOR;
SELECT * FROM AUTOMOVIL;
SELECT MAX(COSTO) FROM AUTOMOVIL;
SELECT MIN(COSTO) FROM AUTOMOVIL;


7. Consultar el total de clientes registrados de cada municipio.
SELECT * FROM CLIENTE;

SELECT MUNICIPIO, COUNT(*) AS TOTAL
FROM CLIENTE
GROUP BY MUNICIPIO;

COMMIT;
8. Consultar el nombre completo de los clientes que tienen autom?vil.
SELECT * FROM CLIENTE;
SELECT * FROM CLIENTE_AUTOMOVIL;

SELECT APATERNO, AMATERNO, NOMBRE 
FROM CLIENTE JOIN CLIENTE_AUTOMOVIL ON CLIENTE.ID_CLIENTE = CLIENTE_AUTOMOVIL.ID_CLIENTE;

--B)  ALIAS DE TABLA
SELECT APATERNO, AMATERNO, NOMBRE 
FROM CLIENTE C JOIN CLIENTE_AUTOMOVIL CA ON C.ID_CLIENTE = CA.ID_CLIENTE;

9. Consultar el total de autom?viles que tiene cada cliente.
SELECT * FROM CLIENTE;
SELECT * FROM CLIENTE_AUTOMOVIL;

--A)
SELECT APATERNO, AMATERNO, NOMBRE, COUNT(*) AS TOTAL
FROM CLIENTE C JOIN CLIENTE_AUTOMOVIL CA ON C.ID_CLIENTE = CA.ID_CLIENTE
GROUP BY APATERNO, AMATERNO, NOMBRE;

--B)
SELECT APATERNO ||' ' || AMATERNO || ' ' || NOMBRE AS CLIENTE, COUNT(*) AS TOTAL
FROM CLIENTE C JOIN CLIENTE_AUTOMOVIL CA ON C.ID_CLIENTE = CA.ID_CLIENTE
GROUP BY APATERNO, AMATERNO, NOMBRE;

--10. Consultar el total de pólizas que ha vendido cada empleado.
SELECT AV.*,TMP.TOTAL FROM AGENTE_VENTAS AV,(SELECT ID_VENDEDOR,COUNT(*)AS TOTAL 
FROM POLIZA GROUP BY ID_VENDEDOR)TMP WHERE AV.ID_VENDEDOR = TMP.ID_VENDEDOR;

--11. Consultar el total de pólizas emitidas por cada tipo de seguro.
SELECT TS.*,TMP.TOTAL FROM TIPO_SEGURO TS,(SELECT ID_SEGURO,COUNT(*)AS TOTAL FROM POLIZA GROUP BY ID_SEGURO)TMP
WHERE TS.ID_SEGURO = TMP.ID_SEGURO;

--12. Consultar el nombre de los empleados que no ha vendido pólizas.
SELECT APATERNO,AMATERNO,NOMBRE
FROM AGENTE_VENTAS WHERE ID_VENDEDOR NOT IN(SELECT ID_VENDEDOR FROM POLIZA);

--13. Consultar el nombre de los clientes que no tienen automóvil asignado.
SELECT * FROM CLIENTE WHERE ID_CLIENTE NOT IN (SELECT ID_CLIENTE FROM CLIENTE_AUTOMOVIL);

--14. Consultar los datos generales de las pólizas (datos generales de todas las tablas que se relacionan con la póliza).
SELECT AG.APATERNO || ' ' || AG.AMATERNO || ' ' || AG.NOMBRE AS AGENTE, DESCRIPCION,
CL.APATERNO || ' ' || CL.AMATERNO || ' ' || CL.NOMBRE AS CLIENTE,
AU.*,
P.FOLIO,P.FECHA_E,P.FECHA_I,P.FECHA_F,P.COSTO
FROM AGENTE_VENTAS AG JOIN POLIZA P ON AG.ID_VENDEDOR = P.ID_VENDEDOR
JOIN TIPO_SEGURO TS ON TS.ID_SEGURO = P.ID_SEGURO
JOIN CLIENTE_AUTOMOVIL CA ON CA.ID_CLIENTE = P.ID_CLIENTE AND CA.MATRICULA = P.MATRICULA AND CA.FECHA = P.FECHA
JOIN CLIENTE CL ON CL.ID_CLIENTE = CA.ID_CLIENTE
JOIN AUTOMOVIL AU ON AU.MATRICULA = CA.MATRICULA;

--15. Consultar el tipo de seguro que no se ha vendido.
SELECT * FROM TIPO_SEGURO WHERE ID_SEGURO NOT IN (SELECT ID_SEGURO FROM POLIZA);

--16. Consultar el total de accidentes que haya atendido cada ajustador.
SELECT AJ.*,TMP.NUM_ACCIDENTES FROM AJUSTADOR AJ, (SELECT ID_AJUSTADOR,COUNT(*) AS NUM_ACCIDENTES FROM ACCIDENTE GROUP BY ID_AJUSTADOR)TMP
WHERE AJ.ID_AJUSTRADOR = TMP.ID_AJUSTADOR;
--17. Consultar los datos generales de los vehículos y en caso de que estén asegurados, mostrar los datos generales de las pólizas.
SELECT * FROM CLIENTE;

SELECT AU.*,P.*
FROM AUTOMOVIL AU LEFT OUTER JOIN CLIENTE_AUTOMOVIL CA ON AU.MATRICULA = CA.MATRICULA
               LEFT OUTER JOIN POLIZA P ON CA.MATRICULA = P.MATRICULA;
--SELECT C.*,A.*
--FROM CLIENTE C JOIN CLIENTE_AUTOMOVIL CA ON C.ID_CLIENTE = CA.ID_CLIENTE
--               JOIN AUTOMOVIL A ON A.NUM_SERIE = CA.NUM_SERIE;

--18. Consultar los datos generales de los ajustadores que no han atendido accidentes.
SELECT * FROM AJUSTADOR WHERE ID_AJUSTRADOR NOT IN (SELECT ID_AJUSTRADOR FROM POLIZA);

--19. Consultar el nombre completo de los clientes que no se han accidentado.
SELECT NOMBRE||' '||APATERNO||' '||AMATERNO AS NOMBRE_COMPLETO FROM CLIENTE WHERE ID_CLIENTE NOT IN (SELECT ID_CLIENTE FROM ACCIDENTE);

--20. Consultar los datos generales de los automóviles que más se ha accidentado.
SELECT AU.* FROM AUTOMOVIL AU WHERE AU.MATRICULA IN (SELECT MATRICULA FROM
(SELECT MATRICULA,COUNT(*) AS TOTAL FROM ACCIDENTE GROUP BY MATRICULA)TMP 
WHERE TMP.TOTAL = (SELECT MAX(TOTAL) FROM (SELECT MATRICULA,COUNT(*) AS TOTAL FROM ACCIDENTE GROUP BY MATRICULA)));

--21. Consultar el nombre completo de los clientes que más automóviles tienen.
SELECT * FROM CLIENTE;
SELECT * FROM CLIENTE_AUTOMOVIL;
 
PASO 1: OBTENER EL TOTAL DE AUTOS QUE TIENE CADA CLIENTE

SELECT APATERNO, AMATERNO, NOMBRE, COUNT(*) AS TOTAL
FROM CLIENTE C JOIN CLIENTE_AUTOMOVIL CA ON C.ID_CLIENTE = CA.ID_CLIENTE
GROUP BY APATERNO, AMATERNO, NOMBRE;


PASO 2: OBTENER EL VALOR M?S ALTO DEL CONTEO DEL PASO 1

SELECT MAX(COUNT(*)) AS TOTAL
FROM CLIENTE C JOIN CLIENTE_AUTOMOVIL CA ON C.ID_CLIENTE = CA.ID_CLIENTE
GROUP BY APATERNO, AMATERNO, NOMBRE;


PASO 3: INTEGRAR EN UNA SOLA CONSULTA EL PASO 1 Y EL PASO 2 
(PARA FILTAR LOS DATOS AGRUPADOS) -- HAVING 
;


SELECT APATERNO, AMATERNO, NOMBRE, COUNT(*) AS TOTAL
    FROM CLIENTE C JOIN CLIENTE_AUTOMOVIL CA ON C.ID_CLIENTE = CA.ID_CLIENTE
    GROUP BY APATERNO, AMATERNO, NOMBRE
    HAVING COUNT(*) = 
(
  SELECT MAX(COUNT(*))
  FROM CLIENTE C JOIN CLIENTE_AUTOMOVIL CA ON C.ID_CLIENTE = CA.ID_CLIENTE
  GROUP BY APATERNO, AMATERNO, NOMBRE
);

--22. Consultar el nombre completo de los clientes que han tenido más de 2 seguros.
SELECT ID_CLIENTE, COUNT(*) AS TOTAL FROM POLIZA GROUP BY ID_CLIENTE;
SELECT NOMBRE||' '||APATERNO||' '||AMATERNO AS NOMBRE_COMPLETO FROM CLIENTE WHERE ID_CLIENTE IN 
(SELECT ID_CLIENTE FROM (SELECT ID_CLIENTE, COUNT(*) AS TOTAL FROM POLIZA GROUP BY ID_CLIENTE)TMP WHERE TMP.TOTAL > 2);

--23. Consultar el nombre del agente de ventas que más seguros ha vendido.
SELECT NOMBRE||' '||APATERNO AS NOMBRE FROM AGENTE_VENTAS WHERE ID_VENDEDOR IN
(SELECT ID_VENDEDOR FROM (SELECT ID_VENDEDOR,COUNT(*)AS TOTAL FROM POLIZA GROUP BY ID_VENDEDOR)TMP 
WHERE TMP.TOTAL = (SELECT MAX(TOTAL) FROM (SELECT ID_VENDEDOR,COUNT(*)AS TOTAL FROM POLIZA GROUP BY ID_VENDEDOR)));

--24. Consultar el nombre completo del empleado que menos pólizas ha vendido.
SELECT NOMBRE||' '||APATERNO AS NOMBRE FROM AGENTE_VENTAS WHERE ID_VENDEDOR IN
(SELECT ID_VENDEDOR FROM (SELECT ID_VENDEDOR,COUNT(*)AS TOTAL FROM POLIZA GROUP BY ID_VENDEDOR)TMP 
WHERE TMP.TOTAL = (SELECT MIN(TOTAL) FROM (SELECT ID_VENDEDOR,COUNT(*)AS TOTAL FROM POLIZA GROUP BY ID_VENDEDOR)));

--25. Consultar el tipo de seguro menos vendido.
SELECT * FROM TIPO_SEGURO WHERE ID_SEGURO IN (SELECT ID_SEGURO 
FROM (SELECT ID_SEGURO,COUNT(*)AS TOTAL FROM POLIZA GROUP BY ID_SEGURO)TMP WHERE TMP.TOTAL = (SELECT MIN(TOTAL) 
FROM (SELECT ID_SEGURO,COUNT(*)AS TOTAL FROM POLIZA GROUP BY ID_SEGURO)));







;

commit;