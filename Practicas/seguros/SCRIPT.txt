--SEGUROS

CREATE TABLE CLIENTE(
   ID_CLIENTE NUMBER(5) CONSTRAINT CLIENTE_PK PRIMARY KEY,
   APATERNO VARCHAR2(35) CONSTRAINT CLI_AP_NN NOT NULL,
   AMATERNO VARCHAR2(35),
   NOMBRE VARCHAR2(50) CONSTRAINT CLI_NOM_NN NOT NULL,
   EMAIL VARCHAR2(50),
   MUNICIPIO VARCHAR2(50) DEFAULT 'ZACATECAS'
); 
--BORRAR LA TABLA
DROP TABLE CLIENTE;
--ALTERA LA ESTRUCTURA DE LA TABLA
ALTER TABLE CLIENTE ADD EDAD NUMBER(2);
ALTER TABLE CLIENTE DROP COLUMN EDAD;

ALTER TABLE CLIENTE DROP COLUMN EDAD;
ALTER TABLE CLIENTE ADD EDAD NUMBER(2);
--ALTER TABLE CLIENTE RENAME EDAD TO EDAD_2;


SELECT * FROM CLIENTE;

INSERT INTO CLIENTE VALUES 
         (1,'DIAZ','DIAZ','ALBERTO','DDA@GMAIL.COM','ZACATECAS');
INSERT INTO CLIENTE VALUES 
         (2,'FLORES','FLORES','LUIS ANGEL','FFLA@GMAIL.COM','ZACATECAS');
INSERT INTO CLIENTE VALUES 
         (3,'AVALOS','AVALOS','HECTOR','AAH@GMAIL.COM','GUADALUPE');
INSERT INTO CLIENTE VALUES 
         (4,'HERNANDEZ','HERNANDEZ','LETICIA','HHL@GMAIL.COM','GUADALUPE');

COMMIT;


--  CLIENTE 
--  AUTOMOVIL
CREATE TABLE AUTOMOVIL(
  NUM_SERIE CHAR(8) CONSTRAINT AUTOMOVIL_PK PRIMARY KEY,
  MARCA VARCHAR2(50) CONSTRAINT AUT_MAR_NN NOT NULL,
  MODELO NUMBER(4) CONSTRAINT AUT_MOD_NN NOT NULL,
  LINEA VARCHAR2(50) CONSTRAINT AUT_LIN_NN NOT NULL,
  COLOR VARCHAR2(35) CONSTRAINT AUT_COL_NN NOT NULL,
  COSTO NUMBER(6) CONSTRAINT AUT_COS_NN NOT NULL
);
INSERT INTO AUTOMOVIL VALUES 
      ('00000001','NISSAN',2020,'SENTRA','AZUL',300000);
INSERT INTO AUTOMOVIL VALUES 
      ('00000002','NISSAN',2019,'VERSA','BLANCO',200000);
INSERT INTO AUTOMOVIL VALUES 
      ('00000003','NISSAN',2019,'MARCH','AZUL',150000);
INSERT INTO AUTOMOVIL VALUES 
      ('00000004','HONDA',2021,'CIVI','ROJO',350000);
INSERT INTO AUTOMOVIL VALUES 
      ('00000005','HONDA',2021,'CITY','GRIS',250000);
INSERT INTO AUTOMOVIL VALUES 
      ('00000006','HONDA',2021,'CR-V','BLANCO',500000);


SELECT * FROM AUTOMOVIL;
UPDATE AUTOMOVIL SET LINEA='CIVIC' WHERE NUM_SERIE = '00000004';

--CLIENTE_AUTOMOVIL
CREATE TABLE CLIENTE_AUTOMOVIL( 
   ID_CLIENTE NUMBER(5),
   NUM_SERIE CHAR(8),
   FECHA DATE,
   CONSTRAINT CLIENTE_AUTOMOVIL_PK PRIMARY KEY (ID_CLIENTE, NUM_SERIE,FECHA),
   CONSTRAINT CLI_CLIAUT_FK FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE),
   CONSTRAINT AUT_CLIAUT_FK FOREIGN KEY (NUM_SERIE) REFERENCES AUTOMOVIL(NUM_SERIE)
);
SELECT * FROM CLIENTE_AUTOMOVIL;
INSERT INTO CLIENTE_AUTOMOVIL VALUES (1,'00000001','01/01/21');
INSERT INTO CLIENTE_AUTOMOVIL VALUES (2,'00000002','01/01/21');
INSERT INTO CLIENTE_AUTOMOVIL VALUES (1,'00000003','01/04/21');
INSERT INTO CLIENTE_AUTOMOVIL VALUES (4,'00000004','1/4/21');
INSERT INTO CLIENTE_AUTOMOVIL VALUES (4,'00000005','1/4/21');
INSERT INTO CLIENTE_AUTOMOVIL VALUES (4,'00000006','10/5/21');

SELECT * FROM CLIENTE;

SELECT SYSDATE FROM DUAL;



--  AGENTE_VENTA
CREATE TABLE AGENTE(
   ID_AGENTE NUMBER(3) CONSTRAINT AGENTE_PK PRIMARY KEY,
   APATERNO VARCHAR2(35) CONSTRAINT AG_AP_NN NOT NULL,
   AMATERNO VARCHAR2(35),
   NOMBRE VARCHAR2(35) CONSTRAINT AG_NOM_NN NOT NULL,
   TELEFONO CHAR(10),
   EMAIL VARCHAR2(50),
   COMISION NUMBER(2) CONSTRAINT AG_COM_NN NOT NULL
);
INSERT INTO AGENTE VALUES(1,'LOPEZ','LOPEZ','ALBERTO','4922002020','LLA@GMAIL.COM',10);
INSERT INTO AGENTE VALUES(2,'VENEGAS','VENEGAS','MARCO','4922002030','VVM@GMAIL.COM',15);
INSERT INTO AGENTE VALUES(3,'DIAZ','ALVAREZ','JORGE','4922002040','DAJ@GMAIL.COM',8);

SELECT * FROM AGENTE;


--  TIPO_SEGURO
CREATE TABLE TIPO_SEGURO(
  ID_TIPO NUMBER(2) CONSTRAINT TIPO_SEGURO_PK PRIMARY KEY,
  DESCRIPCION VARCHAR2(50) CONSTRAINT TS_DES_NN NOT NULL
);
INSERT INTO TIPO_SEGURO VALUES (1,'BASICO');
INSERT INTO TIPO_SEGURO VALUES (2,'AMPLIA');
INSERT INTO TIPO_SEGURO VALUES (3,'DA�OS A TERCEROS');
SELECT * FROM TIPO_SEGURO;


commit;

--POLIZA
CREATE TABLE POLIZA(
   ID_AGENTE NUMBER(3),
   ID_TIPO NUMBER(2),
   ID_CLIENTE NUMBER(5),
   NUM_SERIE CHAR(8),
   FECHA DATE,
   FOLIO CHAR(8),
   FECHA_E DATE CONSTRAINT POL_FE_NN NOT NULL,
   FECHA_I DATE CONSTRAINT POL_FI_NN NOT NULL,
   FECHA_F DATE CONSTRAINT POL_FF_NN NOT NULL,
   COSTO NUMBER(7,2) CONSTRAINT POL_COS_NN NOT NULL,
   CONSTRAINT POLIZA_PK PRIMARY KEY (ID_AGENTE,ID_TIPO,ID_CLIENTE,NUM_SERIE,FECHA,FOLIO),
   CONSTRAINT AGENTE_POL_FK FOREIGN KEY (ID_AGENTE) REFERENCES AGENTE(ID_AGENTE),
   CONSTRAINT TIPO_SEGURO_POL_FK FOREIGN KEY (ID_TIPO) REFERENCES TIPO_SEGURO(ID_TIPO),
   CONSTRAINT CLIAUT_POL_FK FOREIGN KEY (ID_CLIENTE,NUM_SERIE,FECHA) REFERENCES CLIENTE_AUTOMOVIL(ID_CLIENTE,NUM_SERIE,FECHA)
);
SELECT * FROM POLIZA;
INSERT INTO POLIZA VALUES (1,1,1,'00000001','01/01/21','00000001','27/04/21','28/04/21','28/04/22',5000);


COMMIT;

-- AJUSTADOR
CREATE TABLE AJUSTADOR(
   ID_AJUSTADOR NUMBER(3) CONSTRAINT AJUSTADOR_PK PRIMARY KEY,
   APATERNO VARCHAR2(35) CONSTRAINT AJ_AP_NN NOT NULL,
   AMATERNO VARCHAR2(35),
   NOMBRE VARCHAR2(35) CONSTRAINT AJ_NOM_NN NOT NULL,
   TELEFONO CHAR(10),
   EMAIL VARCHAR2(50)
);
SELECT * FROM AJUSTADOR;
INSERT INTO AJUSTADOR VALUES(1,'LOPEZ','LOPEZ','LETICIA','4922002050','LLL@GMAIL.COM');

ALTER TABLE AJUSTADOR ADD SALARIO NUMBER(7,2);

UPDATE AJUSTADOR SET SALARIO = 12000 WHERE ID_AJUSTADOR=1;




-- TIPO_ACCIDENTE


--
-- ACCIDENTE


-- PAGO_POLIZA
CREATE TABLE PAGO_POLIZA(
    ID_AGENTE NUMBER(3),
    ID_TIPO NUMBER(2),
    ID_CLIENTE NUMBER(5),
    NUM_SERIE CHAR(8),
    FECHA DATE,
    FOLIO CHAR(8),
    ID_PAGO NUMBER(5),
    FECHA_PAGO DATE CONSTRAINT PAGO_FP_NN NOT NULL,
    TOTAL_PAGO NUMBER(7,2) CONSTRAINT PAGO_TOPA_NN NOT NULL,
    CONSTRAINT PAGO_POLIZA_PK PRIMARY KEY (ID_AGENTE,ID_TIPO,ID_CLIENTE,NUM_SERIE,FECHA,FOLIO,ID_PAGO),
    CONSTRAINT POLIZA_PAGO_POLIZA_FK FOREIGN KEY (ID_AGENTE,ID_TIPO,ID_CLIENTE,NUM_SERIE,FECHA,FOLIO) 
    REFERENCES POLIZA(ID_AGENTE,ID_TIPO,ID_CLIENTE,NUM_SERIE,FECHA,FOLIO)
);
SELECT * FROM PAGO_POLIZA;

----------------------------------------------
CREATE TABLE EMPLEADO(
 ID_EMPLEADO NUMBER(3) PK
 ...
 
 ID_JEFE NUMBER(3)

 CONSTRAINT ET_EJ_FK  FOREIGN KEY  (ID_JEFE) REFERENCES  EMPLEADO(ID_EMPLEADO)  
)


----------------------------------------------
SENTECIA SELECT

SELECT LISTA DEL SELECT  -- LAS COLUMNAS DEL RESULTADO DE LA CONSULTA 
FROM TABLA(S) CONSULTAR LOS CAMPOS (DATOS)
WHERE  FILTRO PARA ESPECIFICAR LOS REGISTROS A CONSULTAR
GROUP BY  AGRUPAR DATOS
HAVING FILTRO PARA ESPECIFICAR LOS REGISTROS AGRUPADOS A CONSULTAR
ORDER BY ORDENAR EL RESULTADO DE LA CONSULTA
;

1. Consultar los datos generales de todos los clientes.
SELECT * FROM CLIENTE;

2. Consultar el nombre completo de los agentes de ventas en una sola columna.
SELECT * FROM AGENTE;


SELECT APATERNO,AMATERNO,NOMBRE FROM AGENTE;
SELECT APATERNO || AMATERNO || NOMBRE FROM AGENTE;
SELECT APATERNO ||' ' || AMATERNO || ' ' || NOMBRE FROM AGENTE;

SELECT APATERNO ||' ' || AMATERNO || ' ' || NOMBRE FROM AGENTE;

SELECT APATERNO ||' ' || AMATERNO || ' ' || NOMBRE AS AGENTE FROM AGENTE;
SELECT APATERNO ||' ' || AMATERNO || ' ' || NOMBRE AGENTE FROM AGENTE;
SELECT APATERNO ||' ' || AMATERNO || ' ' || NOMBRE "Agente" FROM AGENTE;
SELECT APATERNO ||' ' || AMATERNO || ' ' || NOMBRE "Agente de Ventas" FROM AGENTE;


3. Consultar el salario anual de los ajustadores.
SELECT * FROM AJUSTADOR;

SELECT ID_AJUSTADOR, APATERNO, AMATERNO, NOMBRE, 
      SALARIO AS SALARIO_MENSUAL, 
      SALARIO * 12 AS SALARIO_ANUAL
FROM AJUSTADOR;

TO_CHAR
TO_DATE
TO_NUMBER

4. Consultar los datos generales de todos los veh�culos de una determinada marca.
SELECT * FROM AUTOMOVIL;

SELECT * FROM AUTOMOVIL
WHERE MARCA = 'NISSAN';

=  >    <    >=    <=     <>

5. Consultar los datos generales de los autom�viles cuyo costo est� entre 100000 y 250000.
SELECT * FROM AUTOMOVIL;

SELECT * FROM AUTOMOVIL
WHERE COSTO BETWEEN 100000 AND 250000; 

6. Consultar el total de p�lizas generadas.
SELECT * FROM POLIZA;

SELECT COUNT(*) AS TOTAL_POLIZAS 
FROM POLIZA;

--FUNCIONES DE GRUPO   COUNT(*) |  COUNT(COLUMNA)  SUM(COLUMNA) MAX(COLUMNA)  MIN(COLUMNA  AVG(COLUMNA)
--NOTA_ LAS FUNCIONES DE GRUPO IGNORAN LOS VALORES NULL
SELECT * FROM AJUSTADOR;
SELECT SUM(SALARIO) AS NOMINA FROM AJUSTADOR;
SELECT * FROM AUTOMOVIL;
SELECT MAX(COSTO) FROM AUTOMOVIL;
SELECT MIN(COSTO) FROM AUTOMOVIL;


7. Consultar el total de clientes registrados de cada municipio.
SELECT * FROM CLIENTE;

SELECT MUNICIPIO, COUNT(*) AS TOTAL
FROM CLIENTE
GROUP BY MUNICIPIO;

COMMIT;
8. Consultar el nombre completo de los clientes que tienen autom�vil.
SELECT * FROM CLIENTE;
SELECT * FROM CLIENTE_AUTOMOVIL;

SELECT APATERNO, AMATERNO, NOMBRE 
FROM CLIENTE JOIN CLIENTE_AUTOMOVIL ON CLIENTE.ID_CLIENTE = CLIENTE_AUTOMOVIL.ID_CLIENTE;

--B)  ALIAS DE TABLA

SELECT APATERNO, AMATERNO, NOMBRE 
FROM CLIENTE C JOIN CLIENTE_AUTOMOVIL CA ON C.ID_CLIENTE = CA.ID_CLIENTE;


--ESTRUCTURA DEL JOIN
TA    JOIN  TB    ON  TA.PK = TB.FK
T1    JOIN  T2    ON  T1.PK = T2.FK
TIZQ  JOIN  TDER  ON  TIZQ.PK = TDER.FK



9. Consultar el total de autom�viles que tiene cada cliente.
SELECT * FROM CLIENTE;
SELECT * FROM CLIENTE_AUTOMOVIL;

--A)
SELECT APATERNO, AMATERNO, NOMBRE, COUNT(*) AS TOTAL
FROM CLIENTE C JOIN CLIENTE_AUTOMOVIL CA ON C.ID_CLIENTE = CA.ID_CLIENTE
GROUP BY APATERNO, AMATERNO, NOMBRE;

--B)
SELECT APATERNO ||' ' || AMATERNO || ' ' || NOMBRE AS CLIENTE, COUNT(*) AS TOTAL
FROM CLIENTE C JOIN CLIENTE_AUTOMOVIL CA ON C.ID_CLIENTE = CA.ID_CLIENTE
GROUP BY APATERNO, AMATERNO, NOMBRE;





10. Consultar el total de p�lizas que ha vendido cada empleado.
--*9

11. Consultar el total de p�lizas emitidas por cada tipo de seguro.
--*9


12. Consultar el nombre de los empleados que no ha vendido p�lizas.
SELECT * FROM AGENTE;
SELECT * FROM POLIZA;

--A)
SELECT APATERNO, AMATERNO, NOMBRE
FROM AGENTE
WHERE ID_AGENTE NOT IN (SELECT ID_AGENTE FROM POLIZA);

--B)
SELECT APATERNO ||' ' || AMATERNO || ' ' || NOMBRE AS AGENTE
FROM AGENTE
WHERE ID_AGENTE NOT IN (SELECT ID_AGENTE FROM POLIZA);



13. Consultar el nombre de los clientes que no tienen autom�vil asignado.
--*12

14. Consultar los datos generales de las p�lizas 
(datos generales de todas las tablas que se relacionan con la p�liza).
;
SELECT * FROM POLIZA;

SELECT A.APATERNO ||' ' || A.AMATERNO || ' ' || A.NOMBRE AS AGENTE,
       TS.DESCRIPCION,
       C.APATERNO ||' ' || C.AMATERNO || ' ' || C.NOMBRE AS CLIENTE,
       AU.*,
       P.FOLIO, P.FECHA_E, P.FECHA_I, P.FECHA_F, P.COSTO
FROM AGENTE A JOIN POLIZA P ON A.ID_AGENTE = P.ID_AGENTE
              JOIN TIPO_SEGURO TS ON TS.ID_TIPO = P.ID_TIPO
              JOIN CLIENTE_AUTOMOVIL CA ON CA.ID_CLIENTE = P.ID_CLIENTE AND 
                                           CA.NUM_SERIE = P.NUM_SERIE AND
                                           CA.FECHA = P.FECHA
              JOIN CLIENTE C ON C.ID_CLIENTE = CA.ID_CLIENTE 
              JOIN AUTOMOVIL AU ON AU.NUM_SERIE = CA.NUM_SERIE
;



--SELECT AV.APATERNO|| ' ' ||AV.AMATERNO|| ' ' ||AV.NOMBRE AS AGENTE, TS.NOMBRE
--FROM AGENTE_VENTA AV JOIN POLIZA P ON AV.ID_VENDEDOR = P.ID_VENDEDOR
--                     JOIN TIPO_SEGURO TS  ON TS.ID_SEGURO = P.ID_SEGURO;

15. Consultar el tipo de seguro que no se ha vendido.
--*12

16. Consultar el total de accidentes que haya atendido cada ajustador.
--*9


17A. CONSULTAR LOS DATOS GENERALES DE TODOS LOS CLIENTES Y EN CASO DE QUE
TENGAN UN AUTO ASIGNADO, MOSTRAR LOS DATOS GENERALES DE LOS AUTOS.
SELECT * FROM CLIENTE;

SELECT C.*,A.*
FROM CLIENTE C LEFT OUTER JOIN CLIENTE_AUTOMOVIL CA ON C.ID_CLIENTE = CA.ID_CLIENTE
               LEFT OUTER JOIN AUTOMOVIL A ON A.NUM_SERIE = CA.NUM_SERIE;
--SELECT C.*,A.*
--FROM CLIENTE C JOIN CLIENTE_AUTOMOVIL CA ON C.ID_CLIENTE = CA.ID_CLIENTE
--               JOIN AUTOMOVIL A ON A.NUM_SERIE = CA.NUM_SERIE;

--ESTRUCTURA DEL JOIN
TA    JOIN  TB    ON  TA.PK = TB.FK
T1    JOIN  T2    ON  T1.PK = T2.FK
TIZQ  JOIN  TDER  ON  TIZQ.PK = TDER.FK

17B.Consultar los datos generales de los veh�culos 
y en caso de que est�n asegurados, mostrar los datos generales de las p�lizas.
--*17A


18. Consultar los datos generales de los ajustadores que no han atendido accidentes.
--*12

19. Consultar el nombre completo de los clientes que no se han accidentado.
--*12

20. Consultar los datos generales de los autom�viles que m�s se ha accidentado.
--*21
21. Consultar el nombre completo de los clientes que m�s autom�viles tienen.
SELECT * FROM CLIENTE;
SELECT * FROM CLIENTE_AUTOMOVIL;
 
PASO 1: OBTENER EL TOTAL DE AUTOS QUE TIENE CADA CLIENTE

SELECT APATERNO, AMATERNO, NOMBRE, COUNT(*) AS TOTAL
FROM CLIENTE C JOIN CLIENTE_AUTOMOVIL CA ON C.ID_CLIENTE = CA.ID_CLIENTE
GROUP BY APATERNO, AMATERNO, NOMBRE;


PASO 2: OBTENER EL VALOR M�S ALTO DEL CONTEO DEL PASO 1

SELECT MAX(COUNT(*)) AS TOTAL
FROM CLIENTE C JOIN CLIENTE_AUTOMOVIL CA ON C.ID_CLIENTE = CA.ID_CLIENTE
GROUP BY APATERNO, AMATERNO, NOMBRE;


PASO 3: INTEGRAR EN UNA SOLA CONSULTA EL PASO 1 Y EL PASO 2 
(PARA FILTAR LOS DATOS AGRUPADOS) -- HAVING 
;


SELECT APATERNO, AMATERNO, NOMBRE, COUNT(*) AS TOTAL
    FROM CLIENTE C JOIN CLIENTE_AUTOMOVIL CA ON C.ID_CLIENTE = CA.ID_CLIENTE
    GROUP BY APATERNO, AMATERNO, NOMBRE
    HAVING COUNT(*) = 
(
  SELECT MAX(COUNT(*))
  FROM CLIENTE C JOIN CLIENTE_AUTOMOVIL CA ON C.ID_CLIENTE = CA.ID_CLIENTE
  GROUP BY APATERNO, AMATERNO, NOMBRE
);




22. Consultar el nombre completo de los clientes que han tenido m�s de 2 seguros.
--*21
PASO 1 CON 
HAVING COUNT(*) > 2

23. Consultar el nombre del agente de ventas que m�s seguros ha vendido.
--*21

24. Consultar el nombre completo del empleado que menos p�lizas ha vendido.
--*21
--EN LUGAR DEL MAX  ... UTILIZAR MIN

25. Consultar el tipo de seguro menos vendido.
--*21
--EN LUGAR DEL MAX  ... UTILIZAR MIN




--EXPLICACI�N DE LAS UNIONES EXTERNAS
TA JOIN TB ON  TA.PK = TB.FK  
T1 JOIN T2 ON  T1.PK = T2.FK
TIZQ JOIN TDER ON  TIZQ.PK = TDER.FK
IZQ: IZQUIERDA   DER: DERECHA
JOIN:
OBTIENE LOS DATOS COINCIDENTES (IGUALES) ENTRE LA TABLA A Y LA TABLA B

JOIN IZQUIERDA:   TA LEFT OUTER JOIN TB ON  TA.PK = TB.FK
OBTIENE LOS DATOS COINCIDENTES (IGUALES) ENTRE LA TABLA A Y LA TABLA B
ADEM�S, OBTIENE LOS DATOS DE LA TABLA A(1,IZQ)  QUE NO COINCIDEN CON LOS DATOS DE TABLA B(2,DER)

JOIN DERECHA:    TA RIGHT OUTER JOIN TB ON  TA.PK = TB.FK
OBTIENE LOS DATOS COINCIDENTES (IGUALES) ENTRE LA TABLA A Y LA TABLA B
ADEM�S, OBTIENE LOS DATOS DE LA TABLA B(2,DER)  QUE NO COINCIDEN CON LOS DATOS DE TABLA A(1,IZQ)